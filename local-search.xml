<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo建站过程(初级)</title>
    <link href="/2020/02/21/hexo%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B-%E5%88%9D%E7%BA%A7/"/>
    <url>/2020/02/21/hexo%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B-%E5%88%9D%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="hexo-建站过程"><a href="#hexo-建站过程" class="headerlink" title="hexo 建站过程"></a>hexo 建站过程</h1><h2 id="初级：搭建hexo并部署本地服务器以及github"><a href="#初级：搭建hexo并部署本地服务器以及github" class="headerlink" title="初级：搭建hexo并部署本地服务器以及github"></a>初级：搭建hexo并部署本地服务器以及github</h2><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo文档</a></p><p>hexo框架相关文档如上，相关介绍也都在上面，这里不再赘述。我主要阐述我自己部署hexo的过程，以供参考。由于懒得每次写作都需要进行一次部署，所以想要将hexo搭建在腾讯云服务器上，并且部署在本地的服务器以及github上。</p><pre><code>运行环境：本地: Mac OS / Window 10cvm: ubuntu</code></pre><h3 id="公钥免密登陆"><a href="#公钥免密登陆" class="headerlink" title="公钥免密登陆"></a>公钥免密登陆</h3><p>本地电脑生成公钥和私钥，将公钥上传到cvm上，本地使用私钥，可以实现免密登陆ssh。关于ssh使用的基于非对称加密算法的<code>rsa</code>算法，可以查看<a href="https://en.wikipedia.org/wiki/RSA_(cryptosystem" target="_blank" rel="noopener">wiki百科</a>)的介绍。</p><h4 id="本地电脑配置"><a href="#本地电脑配置" class="headerlink" title="本地电脑配置"></a>本地电脑配置</h4><p>使用命令：<code>ssh-keygen -t rsa</code>，一路回车即可生成一对公钥和私钥。公钥默认名为<code>id_rsa.pub</code>，私钥为<code>id_rsa</code>。存储位置如下：</p><ul><li>Windows：<code>C:\Users\*用户名*\.ssh\</code></li><li>Ubuntu / Mac OS：<code>~\.ssh</code></li></ul><h4 id="cvm配置"><a href="#cvm配置" class="headerlink" title="cvm配置"></a>cvm配置</h4><p>可以直接打开<code>id_rsa.pub</code>，复制内容或者通过SFTP上传到cvm上。cvm进行如下设置：</p><ul><li>确保连接成功，需要更改文件权限：</li></ul><pre><code>chmod 600 authorized_keys # 在~/.ssh/目录中执行chmod 700 ~/.ssh # 在~/目录中执行</code></pre><ul><li>写入公钥：</li></ul><pre><code>cat *公钥路径*/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</code></pre><ul><li>更改服务器配置，确保能够通过密钥登陆：</li></ul><p>修改配置文件：<code>sudo vim /etc/ssh/sshd_config</code>，添加（修改）如下参数：</p><pre><code>RSAAuthentication yesPubkeyAuthentication yesPermitRootLogin yes</code></pre><ul><li><p>可选择禁用密码登录：<code>PasswordAuthentication no</code></p></li><li><p>重启ssh服务：<code>service sshd restart</code></p></li></ul><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>验证是否能直接通过私钥登陆ssh：<code>ssh -i *密钥所在路径* *用户名*@*服务器地址*</code></p><h3 id="基础安装"><a href="#基础安装" class="headerlink" title="基础安装"></a>基础安装</h3><p><a href="https://www.jianshu.com/p/9c1d3dcd8c99" target="_blank" rel="noopener">参考文档1</a> <a href="https://segmentfault.com/a/1190000009723457" target="_blank" rel="noopener">参考文档2</a></p><h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><p>在ubuntu下，输入命令<code>sudo apt-get install git-core</code>。</p><p>之后需要设置用户名以及邮箱。这里使用全局设置。</p><pre><code>git config --global user.name &quot;*用户名*&quot;git config --global user.email &quot;*邮箱*&quot;</code></pre><h4 id="安装node-js以及hexo"><a href="#安装node-js以及hexo" class="headerlink" title="安装node.js以及hexo"></a>安装node.js以及hexo</h4><ul><li>在ubuntu下安装node.js：</li></ul><pre><code>curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -sudo apt-get install -y nodejs</code></pre><ul><li>安装hexo：<code>npm install -g hexo-cli</code></li><li>如果出现<strong>EACCES</strong>错误，修改配置文件即可。<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">参考连接</a><pre><code>mkdir ~/.npm-globalnpm config set prefix &#39;~/.npm-global&#39;export PATH=~/.npm-global/bin:$PATHsource ~/.profile#　测试sudo npm install -g jshint</code></pre>如果<code>npm</code>无法正常下载包，可以使用淘宝的源，输入命令：</li></ul><pre><code>npm install -g *cnpm*--registry=https://registry.npm.taobao.org</code></pre><p>之后使用<code>cnpm</code>代替<code>npm</code>即可。</p><ul><li>安装建站需要的其他包：</li></ul><pre><code>npm install -g hexo-servernpm install -g hexo-deployer-gitnpm install -g hexo-util</code></pre><h4 id="创建本地博客文件夹"><a href="#创建本地博客文件夹" class="headerlink" title="创建本地博客文件夹"></a>创建本地博客文件夹</h4><p>因为我在cvm使用了第二块数据盘，需要<code>sudo</code>权限才能够进行更改。故新建<code>blog</code>文件夹之后修改文件夹权限。</p><pre><code>sudo chown -R $USER:$USER blogsudo chmod -R 755 blog</code></pre><p>进入文件夹，初始化hexo：<code>hexo init .</code> 如果没有将hexo所在路径添加到环境变量中，需要使用<code>npx hexo init .</code></p><p>之后输入<code>hexo s</code>可以启动项目，在本地<code>localhost:4000</code>可以查看。</p><h4 id="将hexo部署到github上"><a href="#将hexo部署到github上" class="headerlink" title="将hexo部署到github上"></a>将hexo部署到github上</h4><p>在github上添加一个<code>repository</code>，名字<strong>必须</strong>是<code>*github用户名*.github.io</code>，否则会出现错误。复制远程git地址。</p><p>在博客所在文件夹中，编辑<code>_config.yml</code>，在文本最后的部署部分更改为：</p><pre><code>deploy:    type: git    repo:        github: *远程git地址*    branch: master</code></pre><p>保存后执行<code>hexo g -d</code>可以生成并部署，或者<code>hexo generate</code>之后<code>hexo deploy</code>亦可。</p><p>在部署过程中，需要输入用户名以及密码。如果以后懒得输入，可以使用如下命令，下次输入后不用再输入：</p><pre><code>git config --global credential.helper store</code></pre><h4 id="将hexo部署到本地"><a href="#将hexo部署到本地" class="headerlink" title="将hexo部署到本地"></a>将hexo部署到本地</h4><p>这里使用git将hexo部署到本地。首先需要创建文件夹，如果出现权限问题，可以参照前面的方法设置文件夹的权限。之后进入文件夹，创建裸仓：</p><pre><code>git init --bare hexo.gitchown -R $User:$User hexo.git</code></pre><p>进入<code>hexo.git</code>文件夹，找到<code>hooks</code>目录并进入，通过如下命令将<code>post-update.sample</code>文件改名为<code>post-update.sample</code>：</p><pre><code>mv post-update.sample post-update</code></pre><p>之后编辑该文件，在顶部加入：</p><pre><code>git --work-tree=*文件夹路径* --git-dir=*文件夹路径*/hexo.git checkout -f</code></pre><p>修改该文件权限：</p><pre><code>chmod +x post-update</code></pre><p>在博客文件夹中，修改<code>_config.yml</code>，将<code>deploy</code>部分改为：</p><pre><code>deploy:    type: git    repo:        github: *远程git地址*        repo: *文件夹路径*/hexo.git    branch: master</code></pre><h5 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h5><p>nginx的<a href="https://blog.csdn.net/weixin_42167759/article/details/85049546" target="_blank" rel="noopener">配置文件解析</a></p><p>由于使用了https，所以nginx需要监听80端口，将http链接跳转为https链接。通过nginx配置https链接可以参考<a href="https://juejin.im/post/5c0144036fb9a04a102f046a" target="_blank" rel="noopener">nginx配置ssl实现https访问</a>，非常简单所以不再赘述。与基础配置不同的是需要添加<code>root</code>指向前面提到的hexo部署到本地的文件夹（下面有提示） ，并且添加<code>include mime.types;</code>确保<code>css</code>文件能够被浏览器正常识别。</p><ul><li>安装：<code>apt-get install nginx</code></li><li><p>查看位置/检查配置：<code>nginx -t</code></p></li><li><p>更改配置</p></li></ul><pre><code>user www-data;worker_processes auto;pid /run/nginx.pid;include /etc/nginx/modules-enabled/*.conf;events { worker_connections 768; # multi_accept on;}http { ## # Basic Settings ##include mime.types; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; # gzip_proxied any; # gzip_comp_level 6; # gzip_buffers 16 8k; # gzip_http_version 1.1; # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; ## # Virtual Host Configs ## include /etc/nginx/conf.d/*.conf; include /etc/nginx/sites-enabled/*; server {      listen 443 ssl;      server_name *域名*;      ssl on;      ssl_certificate /*证书所在文件夹*/*证书*;      ssl_certificate_key /*密钥所在文件夹*/*密钥*;    root *hexo部署到本地的文件夹*;  location / {    index  index.html;  } } server {  listen 80;  server_name *域名*;  return 301 https://blog.chensh236.com$request_uri; }}</code></pre><ul><li>执行<code>nginx -t</code>与<code>nginx -s reload</code>（可能需要sudo）</li></ul><p>如若出现：</p><pre><code>nginx: [warn] the &quot;user&quot; directive makes sense only if the master process runs with super-user privileges, ignored in /usr/local/nginx/conf/nginx.conf:2</code></pre><p>需要解决权限占用问题：</p><pre><code>chown root.root nginxchmod 755 nginxchmod u+s nginx</code></pre><h5 id="重装nginx"><a href="#重装nginx" class="headerlink" title="重装nginx"></a>重装nginx</h5><p>如果nginx出现问题需要重装，其配置文件依旧存在，可以通过如下方法完全清除nginx相关的依赖、配置文件。</p><ul><li>卸载nginx不保留配置文件：<code>sudo apt-get --purge remove nginx</code></li><li>卸载不需要的依赖包：<code>sudo apt-get autoremove</code></li><li>筛选已经安装包中与nginx有关的：<code>dpkg --get-selections | grep nginx</code></li><li>卸载所有有关的：<code>sudo apt-get --purge remove *和nginx相关的安装包*</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网站搭建</tag>
      
      <tag>博客</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
